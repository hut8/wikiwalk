name: Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install OS dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config
      - name: Run tests
        run: cargo test --verbose
      - name: Build server
        run: cargo build --release --bin server
      - name: Build tool
        run: cargo build --release --bin tool
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/release/server
            target/release/tool
          retention-days: 1


  deploy:
    runs-on: ubuntu-24.04
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target/release
      - name: Restore permissions
        run: chmod +x target/release/*
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: target/release
          key: ${{ runner.os }}-build-artifacts-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-artifacts-
      - name: List files
        run: find . -type f && which scp
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Transfer tool binary
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -v target/release/tool ${{ secrets.DEPLOY_SERVER }}:/tmp/wikiwalk-tool.tmp
      - name: Transfer server binary
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -v target/release/server ${{ secrets.DEPLOY_SERVER }}:/tmp/wikiwalk.tmp
      - name: Transfer systemd service files
        run: |
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -v \
            wikiwalk.service \
            wikiwalk-build.service \
            wikiwalk-watchdog.service \
            wikiwalk-certs.service \
            ${{ secrets.DEPLOY_SERVER }}:/tmp/
      - name: Transfer watchdog scripts
        run: |
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -v \
            wikiwalk-build-sentry-watchdog-ping \
            wikiwalk-build-sentry-watchdog-commit \
            ${{ secrets.DEPLOY_SERVER }}:/tmp/
      - name: Deploy
        run: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.DEPLOY_SERVER }} 'sudo /usr/local/bin/wikiwalk-deploy'
